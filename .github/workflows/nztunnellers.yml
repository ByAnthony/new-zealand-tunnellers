name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # build-and-run-tests:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v4.1.2

  #     - name: Setup node
  #       uses: actions/setup-node@v4.0.2
  #       with:
  #         node-version-file: ".nvmrc"

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Lint code
  #       run: npm run lint

  #     - name: Prettier
  #       run: npm run prettier

  #     - name: Build web app
  #       run: npm run build

  #     - name: Run test
  #       run: npm run test

  run-e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # needs: build-and-run-tests
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.1.2

      - name: Setup SSH
        env:
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.DEPLOY_USERNAME }}
          SSH_HOST: ${{ secrets.SERVER_IP }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/gha.key
          chmod 600 ~/.ssh/gha.key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          eval `ssh-agent -s`
          ssh-add - <<< $SSH_KEY
          cat >~/.ssh/config <<END
          Host gha
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/gha.key
            StrictHostKeyChecking no
          END

      - name: Open SSH Tunnel
        run: |
          ssh gha -v -o StrictHostKeyChecking=no -p 5022 -N -L 3306:localhost:3306 ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_SERVER }}

      # - name: Setup node
      #   uses: actions/setup-node@v4.0.2
      #   with:
      #     node-version-file: ".nvmrc"

      # - name: Install dependencies
      #   run: npm ci

      # - name: Create env file
      #   run: |
      #     touch .env
      #     echo MYSQL_HOST=127.0.0.1 >> .env
      #     echo MYSQL_USER=${{ secrets.DEPLOY_USERNAME }} >> .env
      #     echo MYSQL_PASSWORD=${{ secrets.DEPLOY_PASSWORD }} >> .env
      #     echo MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} >> .env
      #     echo MYSQL_PORT=3306 >> .env
      #     echo VERCEL_ENV=local >> .env
      #     cat .env

      # - name: Build web app
      #   run: npm run build

      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps

      # - name: Start web app
      #   run: npm run start &

      # - name: Run e2e tests
      #   run: npx playwright test --trace on

      # - name: Upload Playwright report
      #   uses: actions/upload-artifact@v4.3.6
      #   if: ${{ !cancelled() }}
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 10

  # deployment:
  #   runs-on: ubuntu-latest
  #   needs: run-e2e-tests
  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v4.1.2

  #     - name: Sync files
  #       uses: SamKirkland/FTP-Deploy-Action@v4.3.5
  #       with:
  #         server: ${{ secrets.DEPLOY_SERVER }}
  #         username: ${{ secrets.DEPLOY_USERNAME }}
  #         password: ${{ secrets.DEPLOY_PASSWORD }}
  #         protocol: ftps
  #         port: 5022
