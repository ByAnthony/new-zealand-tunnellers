name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.1.2

      - name: Setup node
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: ".nvmrc"

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Prettier
        run: npm run prettier

      - name: Build web app
        run: npm run build

      - name: Run test
        run: npm run test

  run-e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build-and-run-tests
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.1.2

      - name: Setup node
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: ".nvmrc"

      - name: Setup db
        run: |
          openssl enc -d -aes-256-cbc -pbkdf2 -iter 100000 -in ./utils/database/db/db.sql.enc -out db.sql -pass pass:${{ secrets.DB_PASS }}

      - name: Set Up MySQL Database
        run: |
          **sudo systemctl start mysql** mysql -u root -p${{ secrets.DB_ROOT }} -e "CREATE DATABASE IF NOT EXISTS playwright_testing;"
          mysql -u root -p${{ secrets.DB_ROOT }} playwright_testing < db.sql

      - name: Install dependencies
        run: npm ci

      - name: Create env file
        run: |
          touch .env.gha
          echo MYSQL_HOST=127.0.0.1 >> .env.gha
          echo MYSQL_USER=root >> .env.gha
          echo MYSQL_PASSWORD=root >> .env.gha
          echo MYSQL_DATABASE=playwright_testing >> .env.gha
          echo MYSQL_PORT=3306 >> .env.gha
          echo VERCEL_ENV=local >> .env.gha
          cat .env.gha

      - name: Build web app
        run: npm run build

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start web app
        run: npm run start &

      - name: Run e2e tests
        run: npx playwright test --trace on

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4.3.6
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 10

  # deployment:
  #   runs-on: ubuntu-latest
  #   needs: run-e2e-tests
  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v4.1.2

  #     - name: Sync files
  #       uses: SamKirkland/FTP-Deploy-Action@v4.3.5
  #       with:
  #         server: ${{ secrets.DEPLOY_SERVER }}
  #         username: ${{ secrets.DEPLOY_USERNAME }}
  #         password: ${{ secrets.DEPLOY_PASSWORD }}
  #         protocol: ftps
  #         port: 5022
