name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
  pull_request:
    paths-ignore:
      - "**/*.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  checks-and-run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      HUSKY: 0
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5.0.0

      - name: Setup node
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Next cache
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn`, `bun` or other package managers https://github.com/actions/cache/blob/main/examples.md or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Prettier
        run: npm run prettier

      - name: Run test
        run: npm run test

  run-e2e-tests:
    runs-on: ubuntu-latest
    needs: checks-and-run-tests
    timeout-minutes: 60
    services:
      mariadb:
        image: mariadb:10.2
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ secrets.DATABASE }}
          MYSQL_USER: ${{ secrets.USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.PASSWORD }}
          MARIADB_ROOT_PASSWORD: ${{ secrets.PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5.0.0

      - name: Setup and build web app
        uses: ./.github/actions/setup-and-build
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          database: ${{ secrets.DATABASE }}

      - name: Install playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: npx playwright test

  deployment:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: run-e2e-tests
    services:
      mariadb:
        image: mariadb:10.2
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ secrets.DATABASE }}
          MYSQL_USER: ${{ secrets.USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.PASSWORD }}
          MARIADB_ROOT_PASSWORD: ${{ secrets.PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5.0.0

      - name: Setup and build web app
        uses: ./.github/actions/setup-and-build
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          database: ${{ secrets.DATABASE }}

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          server-dir: ${{ secrets.SERVER_DIR }}/
          exclude: |
            .git/**
            .github/**
            .husky/**
            __tests__/**
            docs/**
            .gitignore
            README.md
            jest.config.js
            jest.setup.js
            node_modules/**
            playwright.config.js

      - name: Restart server
        run: LANG="en_US.UTF-8" ; ssh -T -p 5022 deploy "source nodevenv/$SERVER_DIR/20/bin/activate && cd $SERVER_DIR && npm ci && touch ~/$SERVER_DIR/tmp/restart.txt"
        env:
          SERVER_DIR: ${{ secrets.SERVER_DIR }}
