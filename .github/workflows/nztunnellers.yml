name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  checks-and-run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      HUSKY: 0
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.1.2

      - name: Setup node
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: ".nvmrc"

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Prettier
        run: npm run prettier

      - name: Run test
        run: npm run test

  run-e2e-tests:
    runs-on: ubuntu-latest
    needs: checks-and-run-tests
    timeout-minutes: 60
    services:
      mariadb:
        image: mariadb:10.2
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ secrets.DATABASE }}
          MYSQL_USER: ${{ secrets.USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.1.2

      - name: Configure SSH
        uses: ./.github/actions/ssh-config/action.yml

      - name: Export database
        run: LANG="en_US.UTF-8" ; ssh -T -p 5022 deploy "mysqldump -P 3306 -u ${{ secrets.USERNAME}} -p${{ secrets.PASSWORD }} ${{ secrets.DATABASE }} > github_actions.sql"

      - name: Import database
        run: |
          mkdir -p ~/database
          LANG="en_US.UTF-8" ; scp -i ~/.ssh/deploy.key -P 5022 ${{ secrets.USERNAME}}@${{ secrets.SERVER }}:~/github_actions.sql ~/database

      - name: Checkout database
        run: mysql -h 127.0.0.1 -u ${{ secrets.USERNAME }} -p${{ secrets.PASSWORD }} ${{ secrets.DATABASE }} < ~/database/github_actions.sql

      - name: Setup node
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: ".nvmrc"

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "MYSQL_HOST=127.0.0.1" >> .env
          echo "MYSQL_USER=${{ secrets.USERNAME }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.DATABASE }}" >> .env
          echo "MYSQL_PORT=3306" >> .env

      - name: Build web app
        run: npm run build

      - name: Install playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: npx playwright test

  deployment:
    runs-on: ubuntu-latest
    needs: run-e2e-tests
    services:
      mariadb:
        image: mariadb:10.2
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ secrets.DATABASE }}
          MYSQL_USER: ${{ secrets.USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.1.2

      - name: Configure SSH
        uses: ./.github/actions/ssh-config/action.yml

      - name: Import database
        run: |
          mkdir -p ~/database
          LANG="en_US.UTF-8" ; scp -i ~/.ssh/deploy.key -P 5022 ${{ secrets.USERNAME}}@${{ secrets.SERVER }}:~/github_actions.sql ~/database

      - name: Checkout database
        run: mysql -h 127.0.0.1 -u ${{ secrets.USERNAME }} -p${{ secrets.PASSWORD }} ${{ secrets.DATABASE }} < ~/database/github_actions.sql

      - name: Setup node
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: ".nvmrc"

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "MYSQL_HOST=127.0.0.1" >> .env
          echo "MYSQL_USER=${{ secrets.USERNAME }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.DATABASE }}" >> .env
          echo "MYSQL_PORT=3306" >> .env

      - name: Build web app
        run: npm run build

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          server-dir: ${{ secrets.SERVER_DIR }}/
          exclude: |
            .git/**
            .github/**
            .husky/**
            __tests__/**
            docs/**
            .gitignore
            README.md
            jest.config.js
            jest.setup.js
            node_modules/**
            playwright.config.js

      - name: Restart server
        run: LANG="en_US.UTF-8" ; ssh -T -p 5022 deploy "source nodevenv/${{ secrets.SERVER_DIR }}/19/bin/activate && cd ${{ secrets.SERVER_DIR }} && npm ci && touch ~/${{ secrets.SERVER_DIR }}/tmp/restart.txt"
